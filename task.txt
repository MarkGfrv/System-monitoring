Проект - мониторинг системы:
1. Backend по rest api принимает нотификации о состоянии компонентов системы.
2. Backend сохраняет в бд полученные нотификации (время нотификации, ид компонента, описание события, уровень опасности события)
3. Backend проверяет по бд количество нотификаций с определенным уровнем опасности.
Когда количество событий с определенным уровнем опасности достигло порогового значения, указанного в настройках,
backend отправляет в очередь сообщение о необходимости отправить письмо тем, чьи email указаны в настройках.
4. Сервис по отправке email сообщений читает сообщения из очереди и отправляет на email.
5. Backend поддерживает graphql api для crm.
Для доступа к crm есть 2 роли: пользователь(просмотр общего списка событий, фильтрация по ид компонента, уровню опасности события)
и менеджер (то, что есть у пользователя + просмотр и редактирование настроек системы)
Как идет проверка ролей - выберите вариант, который Вам покажется оптимальным.
6. Unit тесты для функционала backend
------------
Bonus. UI для crm (можно сделать, но не обязательно)

Результат:
1. Проект в репозитории
2. docker images для компонентов проекта
3. docker-compose.yml для запуска проекта